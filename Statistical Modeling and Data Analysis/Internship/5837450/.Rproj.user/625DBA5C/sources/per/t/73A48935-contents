---
title: "Q3Testing"
author: "Kevin White"
date: "2023-04-25"
output: html_document
---

```{r setup, include=FALSE}
library(tidyverse)
library(readr)
library(knitr)
library(ggplot2)
library(maps)
library(scales)
library(dplyr)

Pop <- read_csv("Pop.csv")
AllAgesByState <- read_csv("AllAgesByState.csv")

```

```{r}
# Assuming your data is in a data frame called 'data'
state_condition_matrix <- AllAgesByState %>%
    pivot_wider(names_from = 'Condition',
                values_from = "COVID-19 Deaths") %>%
    column_to_rownames(var = 'State')

state_condition_matrix

# Calculate the sum of COVID-19 deaths for each state
state_deaths <- rowSums(state_condition_matrix)

# Convert the result to a data frame
state_deaths_df <- data.frame(state = names(state_deaths), deaths = state_deaths)

state_deaths_df

```
```{r}
## Create a data frame for plotting
plot_data <- data.frame(State = rownames(state_condition_matrix),
                        state_condition_matrix)

# Reshape the data to long format
plot_data_long <- pivot_longer(plot_data,
                               cols = -State,
                               names_to = "Condition",
                               values_to = "Deaths")

# Get the top 3 conditions for each state
top_conditions_by_state <- plot_data_long %>%
    group_by(State) %>%
    top_n(3, Deaths) %>%
    ungroup()

# Create the plot
ggplot(top_conditions_by_state, aes(x = State, y = Deaths, fill = Condition)) +
    geom_col(position = "dodge") +
    theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
    labs(title = "Top 3 Conditions for COVID-19 Deaths by State",
         x = "State",
         y = "Deaths")
```

```{r}
## Create a data frame for plotting
plot_data <- data.frame(State = rownames(state_condition_matrix),
                        state_condition_matrix)

# Reshape the data to long format
plot_data_long <- pivot_longer(plot_data,
                               cols = -State,
                               names_to = "Condition",
                               values_to = "Deaths")

# Exclude Covid-19 condition
plot_data_long <- plot_data_long[plot_data_long$Condition != "COVID.19",]

# Get the top 3 conditions for each state
top_conditions_by_state <- plot_data_long %>%
    group_by(State) %>%
    top_n(3, Deaths) %>%
    ungroup()

# Create the plot
ggplot(top_conditions_by_state, aes(x = State, y = Deaths, fill = Condition)) +
    geom_col(position = "dodge") +
    theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
    labs(title = "Top 3 Conditions for Deaths by State",
         x = "State",
         y = "Deaths")


```


```{r}
state_data <- left_join(state_deaths_df, Pop, by = c("state" = "Geographic Area"))

# Calculate the ratio of COVID-19 deaths per 1000 population
state_data$ratio <- (state_data$deaths / state_data$`2022`) * 1000

state_data
```



```{r}
# Convert the state names to lowercase and replace spaces with dots
state_data$state <- tolower(gsub(" ", " ", state_data$state))

# Get the map data for the US states
us_states_map <- map_data("state")

# Join your population data with the map data
pop_map_data <- left_join(us_states_map, state_data, by = c("region" = "state"))

# Create the choropleth map
ggplot(pop_map_data, aes(x = long, y = lat, group = group)) +
  geom_polygon(aes(fill = ratio)) +
  scale_fill_gradient(low = "white", high = "red", name = "Deaths per 1000 population") +
  coord_map() +
  theme_void()
```


```{r}
# Convert the state names to lowercase and replace spaces with dots
top_conditions_by_state$State <- tolower(gsub(" ", " ", top_conditions_by_state$State))

# Get the map data for the US states
us_states_map <- map_data("state")

# Create a list to store the plots
map_plots <- list()

# Create a function to plot the map for a given rank
plot_map <- function(rank) {
  # Filter top_conditions_by_state to only include the given rank for every state
  top_conditions_by_state_temp <- top_conditions_by_state %>%
    group_by(State) %>%
    slice(rank) %>%
    ungroup()
  
  # Join your data with the map data
  map_data <- left_join(us_states_map, top_conditions_by_state_temp, by = c("region" = "State"))
  
  # Create the choropleth map
  p <- ggplot(map_data) +
    geom_polygon(aes(x = long, y = lat, group = group, fill = Condition), color = "black") +
    coord_map() +
    scale_x_continuous(limits = c(-125, -66)) +
    scale_y_continuous(limits = c(25, 50)) +
    labs(title = paste0("Top ", rank, " Condition for Deaths by State"),
         fill = "Condition")
  
  # Add the plot to the list of plots
  plots[[rank]] <<- p
}

# Loop through the first, second, and third conditions and create a separate map for each
for (rank in 1:3) {
  map_plots(rank)
}
print(map_plots[[3]])
```